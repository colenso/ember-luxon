{"version":3,"file":"luxon-date-time.js","sources":["../../src/utils/luxon-date-time.js"],"sourcesContent":["import { tracked } from '@glimmer/tracking';\nimport { isBlank } from '@ember/utils';\nimport { DateTime } from 'luxon';\n\nfunction hasTimeZoneOffset(dateTimeString) {\n  // Regex to match ISO strings with a timezone offset (Z or +/-HH:MM)\n  const regex = /Z|([+-]\\d{2}:\\d{2})$/;\n  return regex.test(dateTimeString);\n}\n\nfunction parseDateTime(dateTime, fromFormat = null) {\n  if (isBlank(dateTime)) return DateTime.local();\n  if (fromFormat) {\n    let parsedDateTime = DateTime.fromFormat(dateTime, fromFormat);\n    if (parsedDateTime.isValid) {\n      parsedDateTime.hadTimeZone = hasTimeZoneOffset(dateTime);\n    }\n    return parsedDateTime;\n  }\n  if (typeof dateTime === 'number' && !isNaN(dateTime)) {\n    DateTime.fromMillis(dateTime);\n  }\n  if (dateTime instanceof Date) {\n    return DateTime.fromJSDate(dateTime);\n  }\n  if (dateTime instanceof DateTime) {\n    return dateTime.clone();\n  }\n  let parsedDateTime = DateTime.fromISO(dateTime);\n  if (parsedDateTime.isValid) {\n    parsedDateTime.hadTimeZone = hasTimeZoneOffset(dateTime);\n  }\n  return parsedDateTime;\n}\n\nfunction ordinal(day) {\n  if (day > 3 && day < 21) return 'th';\n  switch (day % 10) {\n    case 1:\n      return 'st';\n    case 2:\n      return 'nd';\n    case 3:\n      return 'rd';\n    default:\n      return 'th';\n  }\n}\n\nexport default class LuxonDateTime {\n  @tracked dateTime;\n\n  constructor(dateTime) {\n    this.dateTime = parseDateTime(dateTime);\n  }\n\n  format(formatString) {\n    if (isBlank(formatString)) return this.dateTime.toISO();\n    let formatStringCopy = formatString;\n    let tZCharacter;\n    const shouldStripTimeZone = formatStringCopy.toLowerCase().endsWith(' z');\n    if (shouldStripTimeZone) {\n      tZCharacter = formatString[formatString.length - 1];\n      formatStringCopy = formatStringCopy.slice(0, -2);\n    }\n    formatStringCopy = formatStringCopy.replace(\n      'llll',\n      'EEE, MMM d, yyyy h:mm a',\n    );\n    formatStringCopy = formatStringCopy.replace(\n      'LLLL',\n      'EEEE, MMMM d, yyyy h:mm a',\n    );\n    formatStringCopy = formatStringCopy.replace('lll', 'MMM d, yyyy h:mm a');\n    formatStringCopy = formatStringCopy.replace('LLL', 'MMMM d, yyyy h:mm a');\n    formatStringCopy = formatStringCopy.replace('ll', 'MMM d, yyyy');\n    formatStringCopy = formatStringCopy.replace('LL', 'MMMM d, yyyy');\n    formatStringCopy = formatStringCopy.replace('l', 'M/d/yyyy');\n    formatStringCopy = formatStringCopy.replace('L', 'MM/dd/yyyy');\n    formatStringCopy = formatStringCopy.replace('ddd', 'EEE');\n    if (shouldStripTimeZone && this.dateTime.hadTimeZone) {\n      tZCharacter =\n        tZCharacter === 'z' ? 'ZZZZ' : tZCharacter === 'Z' ? 'ZZ' : tZCharacter;\n      let formattedStr = this.dateTime.toFormat(\n        `${formatStringCopy} ${tZCharacter}`,\n      );\n      if (formattedStr.includes('Do')) {\n        const day = this.dateTime.day;\n        return formattedStr.replace('Do', `${day}${ordinal(day)}`);\n      }\n      return formattedStr;\n    }\n    return this.dateTime.toFormat(formatStringCopy);\n  }\n}\n"],"names":["hasTimeZoneOffset","dateTimeString","regex","test","parseDateTime","dateTime","fromFormat","isBlank","DateTime","local","parsedDateTime","isValid","hadTimeZone","isNaN","fromMillis","Date","fromJSDate","clone","fromISO","ordinal","day","LuxonDateTime","g","this","prototype","tracked","i","void 0","constructor","format","formatString","toISO","formatStringCopy","tZCharacter","shouldStripTimeZone","toLowerCase","endsWith","length","slice","replace","formattedStr","toFormat","includes"],"mappings":"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"}